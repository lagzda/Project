Description -
The web application named “Hao useful” is a student oriented interface for representing a database consisting
of students and their majors. It focuses on simplicity of use and efficient information lookup by only including
the features that were identified as the most important ones.

The requirements were generated by assessing the use cases of the application. The main aim was to create
a very simple and straight forward representation about the student’s major and the modules associated with it.
The requirements are listed below -
     - Efficiently accessible course information that is specific to the user
     - Notifications bar that informs user about important events and changes

Team roles were assigned based on the preference and knowledge of the different aspects that are in the application.
Because some of the roles were too small students were assigned multiple roles.
Team roles -
Database - Dan, Ralfs
PHP front end/back end - Main - Hellen, Deft; Helpers - Ralfs, Derek, Dan
HTML - Ralfs, Derek

The technologies/frameworks used for the project are as follows -
Collaboration - C9 and Github were used to ensure that everyone has the same workspace and access to the
latest project content. C9 helped to break the restrictions imposed by different types of computers and their
operating systems. It was also connected to Github so it was very easy to keep track of the project’s versions.
Design - The website was created and designed using html and css with help of the Bootstrap framework.
This ensured that students could use the application on their mobile phones as well as their desktops.
Front end/Back end - Because of everyone’s familiarity with PHP it was used as the main language for manipulating
data and behaviour. It was used for both front end and back end because the team decided that it would be easier
to combine them. Although some of the functions are there just for demo purposes and not yet implemented the intended
objectives were achieved.
Database - As the data was identified as structured and the volume of it is not planned to exceed high numbers
Mysql was decided the best choice for this application. The data is normalised and the connection to the database
is made through PHP.

Challenges and issues
The biggest challenges faced were coming up with an idea for the project and deciding what the project should be
called. More technical challenges were finding and combining the languages and frameworks that everyone was familiar
with. Team members worked on aspects they felt most comfortable with and shared their knowledge so everyone would
understand the technical  functionality of the application. An important but very quickly solved challenge was
finding the most suitable and efficient environment for development.

Future
The functionality of the application is very basic at the moment. In future all the static functionality should be
implemented dynamically (help forum and notifications). Administrators should be able to use it as easily
as students so an administrator mode should be included in the application as well with such
operations as - create, read, update, delete (CRUD) on students, courses, notifications and more. As this is
sensitive data some form of security should be considered as well - password hashing, securing connections,
data encryption.

DEMO OF THE APP